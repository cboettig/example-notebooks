---

format: html

---

```{r setup, message=FALSE}
library(tidyverse)
library(tmap)
library(terra)
library(sf)
library(stars)
library(fasterize)
library(spData)
library(glue)
library(RWmisc)
knitr::opts_chunk$set(message=FALSE, warning=FALSE)
```


```{r}
# We will use interactive Leaflet plots with HTML output
tmap_options(check.and.fix = TRUE)
tmap_mode("view")
```

```{r}
# Let's zoom in on a particular area with Mangroves
# Note: the Global Mangrove Watch data is super-high spatial resolution polygons,
# that really are best visualized up close
india <- spData::world |> filter(name_long == "India")

loc <- spData::world |> filter(name_long == "Sri Lanka")
box <- st_bbox(loc)
```


```{r eval=FALSE}
## subset from original data.
sf_use_s2(FALSE) # Original data has misspecified spherical geometry actually...
# internal URL
kba_url <- "https://minio.carlboettiger.info/iucn/KBAsGlobal_2023_March_01_Criteria_TriggerSpecies.zip"
kba_path <- "KBAsGlobal_2023_March_01_Criteria_TriggerSpecies/KBAsGlobal_2023_March_01_POL.shp"
vsiz <- "/vsizip//vsicurl"
kbas <- glue("{vsiz}/{kba_url}/{kba_path}") |> sf::read_sf() |> st_crop(loc) |> st_make_valid()
sf_use_s2(TRUE)

# Note Global Mangrove Watch Data we can access from their public AWS bucket:
base_url <- "https://datadownload-production.s3.amazonaws.com"
vsiz <- "/vsizip//vsicurl" # Virtual filesystem -- not in RAM, not downloaded
gmw <- "GMW_v3_2015" # Let's start with the 2015 data

mangroves2015_shp <- read_sf(glue("{vsiz}/{base_url}/{gmw}.zip")) |>
  st_crop(loc)

#write_sf(mangroves2015_shp, "srilanka_mangroves2015.json", driver="GeoJSON")

```

```{r}
# a bit faster using cached subset layer
biodiversity <- "https://minio.carlboettiger.info/biodiversity"
kbas <- read_sf(paste0("/vsicurl/", biodiversity, "/", "srilanka_kba.json"))
mangroves2015_shp <- read_sf(paste0("/vsicurl/", biodiversity, "/", "srilanka_mangroves2015.json"))
```


Actual GBIF occurrances

```{r}
attach(as.list(box)) # NSE-filter

s3 <- arrow::s3_bucket("biodiversity", endpoint_override="https://minio.carlboettiger.info", anonymous=TRUE)
gbif <- arrow::open_dataset("gbif_richness")
vertabrate_species_gbif <- gbif |>
    dplyr::filter(latitude >= {ymin},
         latitude <= {ymax},
         longitude >= {xmin},
         longitude <= {xmax}
         ) |>
  group_by(longitude, latitude) |> 
  summarise(n = sum(n, na.rm=TRUE)) |> 
  collect() |> 
  tidyr::drop_na()  |>
  stars::st_as_stars(coords=c("longitude", "latitude"))
st_crs(vertabrate_species_gbif) <- st_crs(loc)

```


```{r}
sri_2015_pop <- "https://data.worldpop.org/GIS/Population_Density/Global_2000_2020_1km_UNadj/2015/LKA/lka_pd_2015_1km_UNadj.tif"
population <- stars::read_stars(paste0(sri_2015_pop))

priority_areas <- kbas
mangroves <- mangroves2015_shp 
```

```{r}
tm_shape(population) + tm_raster(n = 20, palette = "viridis", 
                                style="quantile", legend.show=FALSE, alpha=0.4) +
tm_shape(vertabrate_species_gbif) + tm_raster(alpha=0.5) + 
tm_shape(priority_areas) + tm_polygons(alpha=0) +
tm_shape(mangroves) + tm_polygons("darkgreen")
```


Overlapping species distribution polygons

```{r}
reef_fish <- read_sf("/vsizip//vsicurl/https://minio.carlboettiger.info/iucn/WRASSES_PARROTFISHES.zip")
sf_use_s2(FALSE) # Original data has misspecified spherical geometry actually...
fish <- reef_fish |> st_crop(loc)
sf_use_s2(TRUE) # Original data has misspecified spherical geometry actually...

st_as_stars(st_bbox(loc), nx = 600, ny = 1200, values = 0) |> stars::write_stars("grid.tif")
grd <- raster::raster("grid.tif")
wrasses_richness <- RWmisc::overlap.weight(grd, fish, count = TRUE)

```

```{r}
tm_shape(wrasses_richness) + tm_raster(palette="viridis", alpha=0.2)
```



