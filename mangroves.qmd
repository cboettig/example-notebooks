---

format: html

---

```{r}
library(tidyverse)
library(tmap)
library(terra)
library(sf)
library(stars)
library(fasterize)
```


Pre-processing: we can access ESRI shapefiles over virtual file system (VSI) without downloading. 
However, we will find these files much faster to work with in a cloud-optimized format, and further,
if we rasterize them.  GMW is quite high spatial resolution, but for something quick and global in
extent, we will use a coarser raster grid. 



```{r}

files <- paste0("GMW_v3_", c(2015:2017, 2019,2020))

to_cog <- function(f, url="https://datadownload-production.s3.amazonaws.com/") {
  vector <- sf::read_sf(glue::glue("/vsizip//vsicurl/{url}", f, ".zip"))
  
  # stars is much slower, but may get better RAM use
  # st_grid <- st_as_stars(st_bbox(vector), dx = 0.01, dy = 0.01, values = NA_real_, proxy=TRUE)
  # st_raster <- stars::st_rasterize(vector,  st_grid, fun="sum")
  # stars::write_stars(st_raster, paste0(f, ".tif"))

  
  # fasterize uses old raster template, but is *much* faster
  grid <- raster::raster(resolution = 0.01, crs="epsg:4326") # 0.5 deg grid in lat-long
  fast_raster <- fasterize::fasterize(vector, grid, fun="sum")
  terra::rast(fast_raster) |> 
    terra::writeRaster(paste0(f, ".tif"), overwrite=TRUE)
}

purrr::map(files, to_cog)
```



```{r}
## Copy these over to local Cloud storage (MINIO)
# to_cog("MAMMALS", url="https://minio.carlboettiger.info/iucn/")
# to_cog("REPTILES", url="https://minio.carlboettiger.info/iucn/")
# to_cog("amphibians", url="https://minio.carlboettiger.info/iucn/")


#cmd <- paste("cp", fs::dir_ls(".", glob="*.tif"), "nvme/biodiversity/")
# map(cmd, minio::mc)
```

```{r}
library(terra)
rast("GMW_v3_2020.tif") |> plot()
```


```{r}
mammals <- terra::rast("https://minio.carlboettiger.info/biodiversity/MAMMALS.tif")
plot(mammals)


reptiles <- terra::rast("https://minio.carlboettiger.info/biodiversity/REPTILES.tif")
plot(reptiles)
```




